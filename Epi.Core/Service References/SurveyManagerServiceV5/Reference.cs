//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Epi.SurveyManagerServiceV5 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HttpPostedFileBase", Namespace="http://schemas.datacontract.org/2004/07/System.Web")]
    [System.SerializableAttribute()]
    public partial class HttpPostedFileBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserRequest", Namespace="http://schemas.datacontract.org/2004/07/Epi.Web.Common.Message")]
    [System.SerializableAttribute()]
    public partial class UserRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentOrgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAuthenticatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Epi.Web.Common.DTO.OrganizationDTO OrganizationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Epi.SurveyManagerServiceV5.UserDTO UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentOrg {
            get {
                return this.CurrentOrgField;
            }
            set {
                if ((this.CurrentOrgField.Equals(value) != true)) {
                    this.CurrentOrgField = value;
                    this.RaisePropertyChanged("CurrentOrg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentUser {
            get {
                return this.CurrentUserField;
            }
            set {
                if ((this.CurrentUserField.Equals(value) != true)) {
                    this.CurrentUserField = value;
                    this.RaisePropertyChanged("CurrentUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAuthenticated {
            get {
                return this.IsAuthenticatedField;
            }
            set {
                if ((this.IsAuthenticatedField.Equals(value) != true)) {
                    this.IsAuthenticatedField = value;
                    this.RaisePropertyChanged("IsAuthenticated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Epi.Web.Common.DTO.OrganizationDTO Organization {
            get {
                return this.OrganizationField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationField, value) != true)) {
                    this.OrganizationField = value;
                    this.RaisePropertyChanged("Organization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Epi.SurveyManagerServiceV5.UserDTO User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDTO", Namespace="http://schemas.datacontract.org/2004/07/Epi.Web.Common.DTO")]
    [System.SerializableAttribute()]
    public partial class UserDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Epi.Web.Common.Constants.Constant.OperationMode OperationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordHashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ResetPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserHighestRoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Epi.Web.Common.Constants.Constant.OperationMode Operation {
            get {
                return this.OperationField;
            }
            set {
                if ((this.OperationField.Equals(value) != true)) {
                    this.OperationField = value;
                    this.RaisePropertyChanged("Operation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PasswordHash {
            get {
                return this.PasswordHashField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordHashField, value) != true)) {
                    this.PasswordHashField = value;
                    this.RaisePropertyChanged("PasswordHash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ResetPassword {
            get {
                return this.ResetPasswordField;
            }
            set {
                if ((this.ResetPasswordField.Equals(value) != true)) {
                    this.ResetPasswordField = value;
                    this.RaisePropertyChanged("ResetPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Role {
            get {
                return this.RoleField;
            }
            set {
                if ((this.RoleField.Equals(value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UGuid {
            get {
                return this.UGuidField;
            }
            set {
                if ((this.UGuidField.Equals(value) != true)) {
                    this.UGuidField = value;
                    this.RaisePropertyChanged("UGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserHighestRole {
            get {
                return this.UserHighestRoleField;
            }
            set {
                if ((this.UserHighestRoleField.Equals(value) != true)) {
                    this.UserHighestRoleField = value;
                    this.RaisePropertyChanged("UserHighestRole");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserResponse", Namespace="http://schemas.datacontract.org/2004/07/Epi.Web.Common.Message")]
    [System.SerializableAttribute()]
    public partial class UserResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Epi.SurveyManagerServiceV5.UserDTO[] UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Epi.SurveyManagerServiceV5.UserDTO[] User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SurveyManagerServiceV5.IManagerServiceV5")]
    public interface IManagerServiceV5 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/PublishSurvey", ReplyAction="http://tempuri.org/IManagerService/PublishSurveyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Epi.Web.Common.Exception.CustomFaultException), Action="http://tempuri.org/IManagerService/PublishSurveyCustomFaultExceptionFault", Name="CustomFaultException", Namespace="http://www.yourcompany.com/types/")]
        Epi.Web.Common.Message.PublishResponse PublishSurvey(Epi.Web.Common.Message.PublishRequest pRequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/PublishSurvey", ReplyAction="http://tempuri.org/IManagerService/PublishSurveyResponse")]
        System.Threading.Tasks.Task<Epi.Web.Common.Message.PublishResponse> PublishSurveyAsync(Epi.Web.Common.Message.PublishRequest pRequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/GetSurveyInfo", ReplyAction="http://tempuri.org/IManagerService/GetSurveyInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Epi.Web.Common.Exception.CustomFaultException), Action="http://tempuri.org/IManagerService/GetSurveyInfoCustomFaultExceptionFault", Name="CustomFaultException", Namespace="http://www.yourcompany.com/types/")]
        Epi.Web.Common.Message.SurveyInfoResponse GetSurveyInfo(Epi.Web.Common.Message.SurveyInfoRequest pRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/GetSurveyInfo", ReplyAction="http://tempuri.org/IManagerService/GetSurveyInfoResponse")]
        System.Threading.Tasks.Task<Epi.Web.Common.Message.SurveyInfoResponse> GetSurveyInfoAsync(Epi.Web.Common.Message.SurveyInfoRequest pRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/GetOrganization", ReplyAction="http://tempuri.org/IManagerService/GetOrganizationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Epi.Web.Common.Exception.CustomFaultException), Action="http://tempuri.org/IManagerService/GetOrganizationCustomFaultExceptionFault", Name="CustomFaultException", Namespace="http://www.yourcompany.com/types/")]
        Epi.Web.Common.Message.OrganizationResponse GetOrganization(Epi.Web.Common.Message.OrganizationRequest pRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/GetOrganization", ReplyAction="http://tempuri.org/IManagerService/GetOrganizationResponse")]
        System.Threading.Tasks.Task<Epi.Web.Common.Message.OrganizationResponse> GetOrganizationAsync(Epi.Web.Common.Message.OrganizationRequest pRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/GetOrganizationInfo", ReplyAction="http://tempuri.org/IManagerService/GetOrganizationInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Epi.Web.Common.Exception.CustomFaultException), Action="http://tempuri.org/IManagerService/GetOrganizationInfoCustomFaultExceptionFault", Name="CustomFaultException", Namespace="http://www.yourcompany.com/types/")]
        Epi.Web.Common.Message.OrganizationResponse GetOrganizationInfo(Epi.Web.Common.Message.OrganizationRequest pRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/GetOrganizationInfo", ReplyAction="http://tempuri.org/IManagerService/GetOrganizationInfoResponse")]
        System.Threading.Tasks.Task<Epi.Web.Common.Message.OrganizationResponse> GetOrganizationInfoAsync(Epi.Web.Common.Message.OrganizationRequest pRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/GetOrganizationNames", ReplyAction="http://tempuri.org/IManagerService/GetOrganizationNamesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Epi.Web.Common.Exception.CustomFaultException), Action="http://tempuri.org/IManagerService/GetOrganizationNamesCustomFaultExceptionFault", Name="CustomFaultException", Namespace="http://www.yourcompany.com/types/")]
        Epi.Web.Common.Message.OrganizationResponse GetOrganizationNames(Epi.Web.Common.Message.OrganizationRequest pRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/GetOrganizationNames", ReplyAction="http://tempuri.org/IManagerService/GetOrganizationNamesResponse")]
        System.Threading.Tasks.Task<Epi.Web.Common.Message.OrganizationResponse> GetOrganizationNamesAsync(Epi.Web.Common.Message.OrganizationRequest pRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/GetOrganizationByKey", ReplyAction="http://tempuri.org/IManagerService/GetOrganizationByKeyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Epi.Web.Common.Exception.CustomFaultException), Action="http://tempuri.org/IManagerService/GetOrganizationByKeyCustomFaultExceptionFault", Name="CustomFaultException", Namespace="http://www.yourcompany.com/types/")]
        Epi.Web.Common.Message.OrganizationResponse GetOrganizationByKey(Epi.Web.Common.Message.OrganizationRequest pRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/GetOrganizationByKey", ReplyAction="http://tempuri.org/IManagerService/GetOrganizationByKeyResponse")]
        System.Threading.Tasks.Task<Epi.Web.Common.Message.OrganizationResponse> GetOrganizationByKeyAsync(Epi.Web.Common.Message.OrganizationRequest pRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/SetSurveyInfo", ReplyAction="http://tempuri.org/IManagerService/SetSurveyInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Epi.Web.Common.Exception.CustomFaultException), Action="http://tempuri.org/IManagerService/SetSurveyInfoCustomFaultExceptionFault", Name="CustomFaultException", Namespace="http://www.yourcompany.com/types/")]
        Epi.Web.Common.Message.SurveyInfoResponse SetSurveyInfo(Epi.Web.Common.Message.SurveyInfoRequest pRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/SetSurveyInfo", ReplyAction="http://tempuri.org/IManagerService/SetSurveyInfoResponse")]
        System.Threading.Tasks.Task<Epi.Web.Common.Message.SurveyInfoResponse> SetSurveyInfoAsync(Epi.Web.Common.Message.SurveyInfoRequest pRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/GetSurveyAnswer", ReplyAction="http://tempuri.org/IManagerService/GetSurveyAnswerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Epi.Web.Common.Exception.CustomFaultException), Action="http://tempuri.org/IManagerService/GetSurveyAnswerCustomFaultExceptionFault", Name="CustomFaultException", Namespace="http://www.yourcompany.com/types/")]
        Epi.Web.Common.Message.SurveyAnswerResponse GetSurveyAnswer(Epi.Web.Common.Message.SurveyAnswerRequest pRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/GetSurveyAnswer", ReplyAction="http://tempuri.org/IManagerService/GetSurveyAnswerResponse")]
        System.Threading.Tasks.Task<Epi.Web.Common.Message.SurveyAnswerResponse> GetSurveyAnswerAsync(Epi.Web.Common.Message.SurveyAnswerRequest pRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/SetOrganization", ReplyAction="http://tempuri.org/IManagerService/SetOrganizationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Epi.Web.Common.Exception.CustomFaultException), Action="http://tempuri.org/IManagerService/SetOrganizationCustomFaultExceptionFault", Name="CustomFaultException", Namespace="http://www.yourcompany.com/types/")]
        Epi.Web.Common.Message.OrganizationResponse SetOrganization(Epi.Web.Common.Message.OrganizationRequest pRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/SetOrganization", ReplyAction="http://tempuri.org/IManagerService/SetOrganizationResponse")]
        System.Threading.Tasks.Task<Epi.Web.Common.Message.OrganizationResponse> SetOrganizationAsync(Epi.Web.Common.Message.OrganizationRequest pRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/UpdateOrganizationInfo", ReplyAction="http://tempuri.org/IManagerService/UpdateOrganizationInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Epi.Web.Common.Exception.CustomFaultException), Action="http://tempuri.org/IManagerService/UpdateOrganizationInfoCustomFaultExceptionFaul" +
            "t", Name="CustomFaultException", Namespace="http://www.yourcompany.com/types/")]
        Epi.Web.Common.Message.OrganizationResponse UpdateOrganizationInfo(Epi.Web.Common.Message.OrganizationRequest pRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/UpdateOrganizationInfo", ReplyAction="http://tempuri.org/IManagerService/UpdateOrganizationInfoResponse")]
        System.Threading.Tasks.Task<Epi.Web.Common.Message.OrganizationResponse> UpdateOrganizationInfoAsync(Epi.Web.Common.Message.OrganizationRequest pRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/IsValidOrgKey", ReplyAction="http://tempuri.org/IManagerService/IsValidOrgKeyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Epi.Web.Common.Exception.CustomFaultException), Action="http://tempuri.org/IManagerService/IsValidOrgKeyCustomFaultExceptionFault", Name="CustomFaultException", Namespace="http://www.yourcompany.com/types/")]
        bool IsValidOrgKey(Epi.Web.Common.Message.SurveyInfoRequest pRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/IsValidOrgKey", ReplyAction="http://tempuri.org/IManagerService/IsValidOrgKeyResponse")]
        System.Threading.Tasks.Task<bool> IsValidOrgKeyAsync(Epi.Web.Common.Message.SurveyInfoRequest pRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/RePublishSurvey", ReplyAction="http://tempuri.org/IManagerService/RePublishSurveyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Epi.Web.Common.Exception.CustomFaultException), Action="http://tempuri.org/IManagerService/RePublishSurveyCustomFaultExceptionFault", Name="CustomFaultException", Namespace="http://www.yourcompany.com/types/")]
        Epi.Web.Common.Message.PublishResponse RePublishSurvey(Epi.Web.Common.Message.PublishRequest pRequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/RePublishSurvey", ReplyAction="http://tempuri.org/IManagerService/RePublishSurveyResponse")]
        System.Threading.Tasks.Task<Epi.Web.Common.Message.PublishResponse> RePublishSurveyAsync(Epi.Web.Common.Message.PublishRequest pRequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerServiceV2/SetSurveyAnswer", ReplyAction="http://tempuri.org/IManagerServiceV2/SetSurveyAnswerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Epi.Web.Common.Exception.CustomFaultException), Action="http://tempuri.org/IManagerServiceV2/SetSurveyAnswerCustomFaultExceptionFault", Name="CustomFaultException", Namespace="http://www.yourcompany.com/types/")]
        Epi.Web.Common.Message.PreFilledAnswerResponse SetSurveyAnswer(Epi.Web.Common.Message.PreFilledAnswerRequest pRequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerServiceV2/SetSurveyAnswer", ReplyAction="http://tempuri.org/IManagerServiceV2/SetSurveyAnswerResponse")]
        System.Threading.Tasks.Task<Epi.Web.Common.Message.PreFilledAnswerResponse> SetSurveyAnswerAsync(Epi.Web.Common.Message.PreFilledAnswerRequest pRequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerServiceV2/GetSurveyControlList", ReplyAction="http://tempuri.org/IManagerServiceV2/GetSurveyControlListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Epi.Web.Common.Exception.CustomFaultException), Action="http://tempuri.org/IManagerServiceV2/GetSurveyControlListCustomFaultExceptionFaul" +
            "t", Name="CustomFaultException", Namespace="http://www.yourcompany.com/types/")]
        Epi.Web.Common.Message.SurveyControlsResponse GetSurveyControlList(Epi.Web.Common.Message.SurveyControlsRequest pRequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerServiceV2/GetSurveyControlList", ReplyAction="http://tempuri.org/IManagerServiceV2/GetSurveyControlListResponse")]
        System.Threading.Tasks.Task<Epi.Web.Common.Message.SurveyControlsResponse> GetSurveyControlListAsync(Epi.Web.Common.Message.SurveyControlsRequest pRequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerServiceV3/UpdateRecordStatus", ReplyAction="http://tempuri.org/IManagerServiceV3/UpdateRecordStatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Epi.Web.Common.Exception.CustomFaultException), Action="http://tempuri.org/IManagerServiceV3/UpdateRecordStatusCustomFaultExceptionFault", Name="CustomFaultException", Namespace="http://www.yourcompany.com/types/")]
        void UpdateRecordStatus(Epi.Web.Common.Message.SurveyAnswerRequest pRequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerServiceV3/UpdateRecordStatus", ReplyAction="http://tempuri.org/IManagerServiceV3/UpdateRecordStatusResponse")]
        System.Threading.Tasks.Task UpdateRecordStatusAsync(Epi.Web.Common.Message.SurveyAnswerRequest pRequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerServiceV4/ValidateOrganization", ReplyAction="http://tempuri.org/IManagerServiceV4/ValidateOrganizationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Epi.Web.Common.Exception.CustomFaultException), Action="http://tempuri.org/IManagerServiceV4/ValidateOrganizationCustomFaultExceptionFaul" +
            "t", Name="CustomFaultException", Namespace="http://www.yourcompany.com/types/")]
        bool ValidateOrganization(Epi.Web.Common.Message.OrganizationRequest Request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerServiceV4/ValidateOrganization", ReplyAction="http://tempuri.org/IManagerServiceV4/ValidateOrganizationResponse")]
        System.Threading.Tasks.Task<bool> ValidateOrganizationAsync(Epi.Web.Common.Message.OrganizationRequest Request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerServiceV4/GetAllSurveysByOrgKey", ReplyAction="http://tempuri.org/IManagerServiceV4/GetAllSurveysByOrgKeyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Epi.Web.Common.Exception.CustomFaultException), Action="http://tempuri.org/IManagerServiceV4/GetAllSurveysByOrgKeyCustomFaultExceptionFau" +
            "lt", Name="CustomFaultException", Namespace="http://www.yourcompany.com/types/")]
        Epi.Web.Common.Message.SurveyInfoResponse GetAllSurveysByOrgKey(string OrgKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerServiceV4/GetAllSurveysByOrgKey", ReplyAction="http://tempuri.org/IManagerServiceV4/GetAllSurveysByOrgKeyResponse")]
        System.Threading.Tasks.Task<Epi.Web.Common.Message.SurveyInfoResponse> GetAllSurveysByOrgKeyAsync(string OrgKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerServiceV5/SetJsonColumn", ReplyAction="http://tempuri.org/IManagerServiceV5/SetJsonColumnResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Epi.Web.Common.Exception.CustomFaultException), Action="http://tempuri.org/IManagerServiceV5/SetJsonColumnCustomFaultExceptionFault", Name="CustomFaultException", Namespace="http://www.yourcompany.com/types/")]
        string SetJsonColumn(string[] SurveyIds, string OrgId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerServiceV5/SetJsonColumn", ReplyAction="http://tempuri.org/IManagerServiceV5/SetJsonColumnResponse")]
        System.Threading.Tasks.Task<string> SetJsonColumnAsync(string[] SurveyIds, string OrgId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerServiceV5/SetJsonColumnAll", ReplyAction="http://tempuri.org/IManagerServiceV5/SetJsonColumnAllResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Epi.Web.Common.Exception.CustomFaultException), Action="http://tempuri.org/IManagerServiceV5/SetJsonColumnAllCustomFaultExceptionFault", Name="CustomFaultException", Namespace="http://www.yourcompany.com/types/")]
        string SetJsonColumnAll(string AdminKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerServiceV5/SetJsonColumnAll", ReplyAction="http://tempuri.org/IManagerServiceV5/SetJsonColumnAllResponse")]
        System.Threading.Tasks.Task<string> SetJsonColumnAllAsync(string AdminKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerServiceV5/GetLoginToken", ReplyAction="http://tempuri.org/IManagerServiceV5/GetLoginTokenResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Epi.Web.Common.Exception.CustomFaultException), Action="http://tempuri.org/IManagerServiceV5/GetLoginTokenCustomFaultExceptionFault", Name="CustomFaultException", Namespace="http://www.yourcompany.com/types/")]
        Epi.SurveyManagerServiceV5.UserResponse GetLoginToken(Epi.SurveyManagerServiceV5.UserRequest UserInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerServiceV5/GetLoginToken", ReplyAction="http://tempuri.org/IManagerServiceV5/GetLoginTokenResponse")]
        System.Threading.Tasks.Task<Epi.SurveyManagerServiceV5.UserResponse> GetLoginTokenAsync(Epi.SurveyManagerServiceV5.UserRequest UserInfo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IManagerServiceV5Channel : Epi.SurveyManagerServiceV5.IManagerServiceV5, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ManagerServiceV5Client : System.ServiceModel.ClientBase<Epi.SurveyManagerServiceV5.IManagerServiceV5>, Epi.SurveyManagerServiceV5.IManagerServiceV5 {
        
        public ManagerServiceV5Client() {
        }
        
        public ManagerServiceV5Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ManagerServiceV5Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ManagerServiceV5Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ManagerServiceV5Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Epi.Web.Common.Message.PublishResponse PublishSurvey(Epi.Web.Common.Message.PublishRequest pRequestMessage) {
            return base.Channel.PublishSurvey(pRequestMessage);
        }
        
        public System.Threading.Tasks.Task<Epi.Web.Common.Message.PublishResponse> PublishSurveyAsync(Epi.Web.Common.Message.PublishRequest pRequestMessage) {
            return base.Channel.PublishSurveyAsync(pRequestMessage);
        }
        
        public Epi.Web.Common.Message.SurveyInfoResponse GetSurveyInfo(Epi.Web.Common.Message.SurveyInfoRequest pRequest) {
            return base.Channel.GetSurveyInfo(pRequest);
        }
        
        public System.Threading.Tasks.Task<Epi.Web.Common.Message.SurveyInfoResponse> GetSurveyInfoAsync(Epi.Web.Common.Message.SurveyInfoRequest pRequest) {
            return base.Channel.GetSurveyInfoAsync(pRequest);
        }
        
        public Epi.Web.Common.Message.OrganizationResponse GetOrganization(Epi.Web.Common.Message.OrganizationRequest pRequest) {
            return base.Channel.GetOrganization(pRequest);
        }
        
        public System.Threading.Tasks.Task<Epi.Web.Common.Message.OrganizationResponse> GetOrganizationAsync(Epi.Web.Common.Message.OrganizationRequest pRequest) {
            return base.Channel.GetOrganizationAsync(pRequest);
        }
        
        public Epi.Web.Common.Message.OrganizationResponse GetOrganizationInfo(Epi.Web.Common.Message.OrganizationRequest pRequest) {
            return base.Channel.GetOrganizationInfo(pRequest);
        }
        
        public System.Threading.Tasks.Task<Epi.Web.Common.Message.OrganizationResponse> GetOrganizationInfoAsync(Epi.Web.Common.Message.OrganizationRequest pRequest) {
            return base.Channel.GetOrganizationInfoAsync(pRequest);
        }
        
        public Epi.Web.Common.Message.OrganizationResponse GetOrganizationNames(Epi.Web.Common.Message.OrganizationRequest pRequest) {
            return base.Channel.GetOrganizationNames(pRequest);
        }
        
        public System.Threading.Tasks.Task<Epi.Web.Common.Message.OrganizationResponse> GetOrganizationNamesAsync(Epi.Web.Common.Message.OrganizationRequest pRequest) {
            return base.Channel.GetOrganizationNamesAsync(pRequest);
        }
        
        public Epi.Web.Common.Message.OrganizationResponse GetOrganizationByKey(Epi.Web.Common.Message.OrganizationRequest pRequest) {
            return base.Channel.GetOrganizationByKey(pRequest);
        }
        
        public System.Threading.Tasks.Task<Epi.Web.Common.Message.OrganizationResponse> GetOrganizationByKeyAsync(Epi.Web.Common.Message.OrganizationRequest pRequest) {
            return base.Channel.GetOrganizationByKeyAsync(pRequest);
        }
        
        public Epi.Web.Common.Message.SurveyInfoResponse SetSurveyInfo(Epi.Web.Common.Message.SurveyInfoRequest pRequest) {
            return base.Channel.SetSurveyInfo(pRequest);
        }
        
        public System.Threading.Tasks.Task<Epi.Web.Common.Message.SurveyInfoResponse> SetSurveyInfoAsync(Epi.Web.Common.Message.SurveyInfoRequest pRequest) {
            return base.Channel.SetSurveyInfoAsync(pRequest);
        }
        
        public Epi.Web.Common.Message.SurveyAnswerResponse GetSurveyAnswer(Epi.Web.Common.Message.SurveyAnswerRequest pRequest) {
            return base.Channel.GetSurveyAnswer(pRequest);
        }
        
        public System.Threading.Tasks.Task<Epi.Web.Common.Message.SurveyAnswerResponse> GetSurveyAnswerAsync(Epi.Web.Common.Message.SurveyAnswerRequest pRequest) {
            return base.Channel.GetSurveyAnswerAsync(pRequest);
        }
        
        public Epi.Web.Common.Message.OrganizationResponse SetOrganization(Epi.Web.Common.Message.OrganizationRequest pRequest) {
            return base.Channel.SetOrganization(pRequest);
        }
        
        public System.Threading.Tasks.Task<Epi.Web.Common.Message.OrganizationResponse> SetOrganizationAsync(Epi.Web.Common.Message.OrganizationRequest pRequest) {
            return base.Channel.SetOrganizationAsync(pRequest);
        }
        
        public Epi.Web.Common.Message.OrganizationResponse UpdateOrganizationInfo(Epi.Web.Common.Message.OrganizationRequest pRequest) {
            return base.Channel.UpdateOrganizationInfo(pRequest);
        }
        
        public System.Threading.Tasks.Task<Epi.Web.Common.Message.OrganizationResponse> UpdateOrganizationInfoAsync(Epi.Web.Common.Message.OrganizationRequest pRequest) {
            return base.Channel.UpdateOrganizationInfoAsync(pRequest);
        }
        
        public bool IsValidOrgKey(Epi.Web.Common.Message.SurveyInfoRequest pRequest) {
            return base.Channel.IsValidOrgKey(pRequest);
        }
        
        public System.Threading.Tasks.Task<bool> IsValidOrgKeyAsync(Epi.Web.Common.Message.SurveyInfoRequest pRequest) {
            return base.Channel.IsValidOrgKeyAsync(pRequest);
        }
        
        public Epi.Web.Common.Message.PublishResponse RePublishSurvey(Epi.Web.Common.Message.PublishRequest pRequestMessage) {
            return base.Channel.RePublishSurvey(pRequestMessage);
        }
        
        public System.Threading.Tasks.Task<Epi.Web.Common.Message.PublishResponse> RePublishSurveyAsync(Epi.Web.Common.Message.PublishRequest pRequestMessage) {
            return base.Channel.RePublishSurveyAsync(pRequestMessage);
        }
        
        public Epi.Web.Common.Message.PreFilledAnswerResponse SetSurveyAnswer(Epi.Web.Common.Message.PreFilledAnswerRequest pRequestMessage) {
            return base.Channel.SetSurveyAnswer(pRequestMessage);
        }
        
        public System.Threading.Tasks.Task<Epi.Web.Common.Message.PreFilledAnswerResponse> SetSurveyAnswerAsync(Epi.Web.Common.Message.PreFilledAnswerRequest pRequestMessage) {
            return base.Channel.SetSurveyAnswerAsync(pRequestMessage);
        }
        
        public Epi.Web.Common.Message.SurveyControlsResponse GetSurveyControlList(Epi.Web.Common.Message.SurveyControlsRequest pRequestMessage) {
            return base.Channel.GetSurveyControlList(pRequestMessage);
        }
        
        public System.Threading.Tasks.Task<Epi.Web.Common.Message.SurveyControlsResponse> GetSurveyControlListAsync(Epi.Web.Common.Message.SurveyControlsRequest pRequestMessage) {
            return base.Channel.GetSurveyControlListAsync(pRequestMessage);
        }
        
        public void UpdateRecordStatus(Epi.Web.Common.Message.SurveyAnswerRequest pRequestMessage) {
            base.Channel.UpdateRecordStatus(pRequestMessage);
        }
        
        public System.Threading.Tasks.Task UpdateRecordStatusAsync(Epi.Web.Common.Message.SurveyAnswerRequest pRequestMessage) {
            return base.Channel.UpdateRecordStatusAsync(pRequestMessage);
        }
        
        public bool ValidateOrganization(Epi.Web.Common.Message.OrganizationRequest Request) {
            return base.Channel.ValidateOrganization(Request);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateOrganizationAsync(Epi.Web.Common.Message.OrganizationRequest Request) {
            return base.Channel.ValidateOrganizationAsync(Request);
        }
        
        public Epi.Web.Common.Message.SurveyInfoResponse GetAllSurveysByOrgKey(string OrgKey) {
            return base.Channel.GetAllSurveysByOrgKey(OrgKey);
        }
        
        public System.Threading.Tasks.Task<Epi.Web.Common.Message.SurveyInfoResponse> GetAllSurveysByOrgKeyAsync(string OrgKey) {
            return base.Channel.GetAllSurveysByOrgKeyAsync(OrgKey);
        }
        
        public string SetJsonColumn(string[] SurveyIds, string OrgId) {
            return base.Channel.SetJsonColumn(SurveyIds, OrgId);
        }
        
        public System.Threading.Tasks.Task<string> SetJsonColumnAsync(string[] SurveyIds, string OrgId) {
            return base.Channel.SetJsonColumnAsync(SurveyIds, OrgId);
        }
        
        public string SetJsonColumnAll(string AdminKey) {
            return base.Channel.SetJsonColumnAll(AdminKey);
        }
        
        public System.Threading.Tasks.Task<string> SetJsonColumnAllAsync(string AdminKey) {
            return base.Channel.SetJsonColumnAllAsync(AdminKey);
        }
        
        public Epi.SurveyManagerServiceV5.UserResponse GetLoginToken(Epi.SurveyManagerServiceV5.UserRequest UserInfo) {
            return base.Channel.GetLoginToken(UserInfo);
        }
        
        public System.Threading.Tasks.Task<Epi.SurveyManagerServiceV5.UserResponse> GetLoginTokenAsync(Epi.SurveyManagerServiceV5.UserRequest UserInfo) {
            return base.Channel.GetLoginTokenAsync(UserInfo);
        }
    }
}
